<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="www.api.txn.ledger.Ledger">

    <!-- üîí ÏÜåÏú†Ïûê Ïä§ÏΩîÌîÑ: ownerId ÏóÜÏúºÎ©¥ Ï∞®Îã® -->
    <sql id="ownerScope">
        <choose>
            <when test="ownerId != null"> AND OWNER_ID = #{ownerId} </when>
            <otherwise> AND 1 = 0 </otherwise>
        </choose>
    </sql>

    <!-- Í≥µÌÜµ where -->
    <sql id="whereLedger">
        <include refid="ownerScope"/>

        <!-- Í∑∏Î£π ÏΩîÎìú(ÏûàÏúºÎ©¥ ÏÇ¨Ïö©) -->
        <if test="grpCd != null and grpCd != ''">
            AND GRP_CD = #{grpCd}
        </if>

        <!-- Í≥†Ï†ïÎßå Î≥¥Í∏∞: ÎÇ†ÏßúÏ°∞Í±¥ Î¨¥Ïãú -->
        <if test="fixedOnly != null and fixedOnly">
            AND FIXED_AT = 'Y'
        </if>

        <!-- fixedOnlyÍ∞Ä ÏïÑÎãê ÎïåÎßå ÎÇ†ÏßúÏ°∞Í±¥ -->
        <if test="!(fixedOnly != null and fixedOnly)">
            <choose>
                <!-- Í∏∞Í∞Ñ Í≤ÄÏÉâÏù¥ Ïò§Î©¥ Î≤îÏúÑ Ïö∞ÏÑ† -->
                <when test="from != null and from != '' and to != null and to != ''">
                    AND TXN_DT <![CDATA[ >= ]]> CONCAT(#{from}, ' 00:00:00')
                    AND TXN_DT <![CDATA[ <  ]]> DATE_ADD(CONCAT(#{to}, ' 00:00:00'), INTERVAL 1 DAY)
                </when>
                <!-- Îã®Ïùº ÎÇ†Ïßú Ïö∞ÏÑ†(searchDate/ledgerDate/txnDt/createDate) -->
                <when test="searchDate != null and searchDate != ''">
                    AND TXN_DT <![CDATA[ >= ]]> CONCAT(#{searchDate}, ' 00:00:00')
                    AND TXN_DT <![CDATA[ <  ]]> DATE_ADD(CONCAT(#{searchDate}, ' 00:00:00'), INTERVAL 1 DAY)
                </when>
                <when test="ledgerDate != null and ledgerDate != ''">
                    AND TXN_DT <![CDATA[ >= ]]> CONCAT(#{ledgerDate}, ' 00:00:00')
                    AND TXN_DT <![CDATA[ <  ]]> DATE_ADD(CONCAT(#{ledgerDate}, ' 00:00:00'), INTERVAL 1 DAY)
                </when>
                <when test="txnDt != null and txnDt != ''">
                    AND TXN_DT <![CDATA[ >= ]]> CONCAT(#{txnDt}, ' 00:00:00')
                    AND TXN_DT <![CDATA[ <  ]]> DATE_ADD(CONCAT(#{txnDt}, ' 00:00:00'), INTERVAL 1 DAY)
                </when>
                <when test="createDate != null and createDate != ''">
                    AND TXN_DT <![CDATA[ >= ]]> CONCAT(#{createDate}, ' 00:00:00')
                    AND TXN_DT <![CDATA[ <  ]]> DATE_ADD(CONCAT(#{createDate}, ' 00:00:00'), INTERVAL 1 DAY)
                </when>
            </choose>
        </if>

        <!-- Î≥¥Ï°∞ ÌïÑÌÑ∞ -->
        <if test="ioType != null and ioType != ''">
            AND IO_TYPE = #{ioType}
        </if>
        <if test="accountNm != null and accountNm != ''">
            AND ACCOUNT_NM = #{accountNm}
        </if>
        <if test="categoryNm != null and categoryNm != ''">
            AND CATEGORY_NM = #{categoryNm}
        </if>
        <if test="kw != null and kw != ''">
            AND (MEMO LIKE CONCAT('%', #{kw}, '%')
                 OR MERCHANT_NM LIKE CONCAT('%', #{kw}, '%')
                 OR TAGS LIKE CONCAT('%', #{kw}, '%'))
        </if>
    </sql>

    <!-- Î™©Î°ù -->
    <select id="selectLedgerList" parameterType="map" resultType="CamelHashMap">
        /*
         SQL ID: www.api.txn.ledger.Ledger.selectLedgerList
         Description : Î™©Î°ù Query
        */
        SELECT
            TXN_ID,
            OWNER_ID,
            GRP_CD,
            DATE_FORMAT(TXN_DT, '%Y-%m-%d %H:%i:%s') AS TXN_DT,
            IO_TYPE,
            AMOUNT,
            CURRENCY_CD,
            ACCOUNT_NM,
            CATEGORY_NM,
            SUBCATEGORY_NM,
            MERCHANT_NM,
            TAGS,
            MEMO,
            XFER_GRP_ID,
            FIXED_AT,
            USE_AT,
            DATE_FORMAT(CREATED_DT, '%Y-%m-%d %H:%i:%s') AS CREATED_DT,
            DATE_FORMAT(UPDATED_DT, '%Y-%m-%d %H:%i:%s') AS UPDATED_DT
        FROM TB_LEDGER
        <where>
            <include refid="whereLedger"/>
        </where>
        ORDER BY TXN_ID DESC
        <if test="limit != null and offset != null">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <!-- Ïπ¥Ïö¥Ìä∏ -->
    <select id="selectLedgerListCount" parameterType="hashmap" resultType="int">
        SELECT COUNT(*) CNT
        FROM TB_LEDGER
        <where>
            <include refid="whereLedger"/>
        </where>
    </select>

    <!-- ÏÉÅÏÑ∏ -->
    <select id="selectLedgerDetail" parameterType="map" resultType="CamelHashMap">
        /*
         SQL ID: www.api.txn.ledger.Ledger.selectLedgerDetail
        */
        SELECT
            TXN_ID,
            OWNER_ID,
            GRP_CD,
            DATE_FORMAT(TXN_DT, '%Y-%m-%d %H:%i:%s') AS TXN_DT,
            IO_TYPE,
            AMOUNT,
            CURRENCY_CD,
            ACCOUNT_NM,
            CATEGORY_NM,
            SUBCATEGORY_NM,
            MERCHANT_NM,
            TAGS,
            MEMO,
            XFER_GRP_ID,
            FIXED_AT,
            USE_AT,
            DATE_FORMAT(CREATED_DT, '%Y-%m-%d %H:%i:%s') AS CREATED_DT,
            DATE_FORMAT(UPDATED_DT, '%Y-%m-%d %H:%i:%s') AS UPDATED_DT
        FROM TB_LEDGER
        WHERE TXN_ID = #{txnId}
        <include refid="ownerScope"/>
    </select>

    <!-- Îì±Î°ù -->
    <insert id="insertLedger" parameterType="hashmap">
        /*
         SQL ID: www.api.txn.ledger.Ledger.insertLedger
        */
        INSERT INTO TB_LEDGER
        (
            OWNER_ID,
            GRP_CD,
            TXN_DT,
            IO_TYPE,
            AMOUNT,
            CURRENCY_CD,
            ACCOUNT_NM,
            CATEGORY_NM,
            SUBCATEGORY_NM,
            MERCHANT_NM,
            TAGS,
            MEMO,
            XFER_GRP_ID,
            FIXED_AT,
            USE_AT,
            CREATED_DT,
            UPDATED_DT
        )
        VALUES
        (
            #{ownerId},
            #{grpCd},
            IFNULL(STR_TO_DATE(NULLIF(CONCAT(REPLACE(REPLACE(SUBSTRING_INDEX(REPLACE(#{txnDt}, 'T',' '), '.', 1),'Z',''),'T',' '),
                   CASE WHEN LENGTH(REPLACE(REPLACE(SUBSTRING_INDEX(REPLACE(#{txnDt}, 'T',' '), '.', 1),'Z',''),'T',' '))=16 THEN ':00' ELSE '' END),''), '%Y-%m-%d %H:%i:%s'), NOW()),
            #{ioType},
            #{amount},
            #{currencyCd},
            #{accountNm},
            #{categoryNm},
            #{subcategoryNm},
            #{merchantNm},
            #{tags},
            #{memo},
            #{xferGrpId},
            COALESCE(NULLIF(#{fixedAt}, ''), 'N'),
            COALESCE(NULLIF(#{useAt}, ''), 'Y'),
            IFNULL(STR_TO_DATE(NULLIF(CONCAT(REPLACE(REPLACE(SUBSTRING_INDEX(REPLACE(#{createdDt}, 'T',' '), '.', 1),'Z',''),'T',' '),
                   CASE WHEN LENGTH(REPLACE(REPLACE(SUBSTRING_INDEX(REPLACE(#{createdDt}, 'T',' '), '.', 1),'Z',''),'T',' '))=16 THEN ':00' ELSE '' END),''), '%Y-%m-%d %H:%i:%s'), NOW()),
            IFNULL(STR_TO_DATE(NULLIF(CONCAT(REPLACE(REPLACE(SUBSTRING_INDEX(REPLACE(#{updatedDt}, 'T',' '), '.', 1),'Z',''),'T',' '),
                   CASE WHEN LENGTH(REPLACE(REPLACE(SUBSTRING_INDEX(REPLACE(#{updatedDt}, 'T',' '), '.', 1),'Z',''),'T',' '))=16 THEN ':00' ELSE '' END),''), '%Y-%m-%d %H:%i:%s'), NOW())
        )
    </insert>

    <!-- ÏàòÏ†ï -->
    <update id="updateLedger" parameterType="hashmap">
        /*
         SQL ID: www.api.txn.ledger.Ledger.updateLedger
        */
        UPDATE TB_LEDGER
        <set>
            <if test='grpCd != null and grpCd != ""'>            GRP_CD = #{grpCd}, </if>
            <if test='txnDt != null and txnDt != ""'>
                TXN_DT = STR_TO_DATE(NULLIF(CONCAT(REPLACE(REPLACE(SUBSTRING_INDEX(REPLACE(#{txnDt}, 'T',' '), '.', 1),'Z',''),'T',' '),
                CASE WHEN LENGTH(REPLACE(REPLACE(SUBSTRING_INDEX(REPLACE(#{txnDt}, 'T',' '), '.', 1),'Z',''),'T',' '))=16 THEN ':00' ELSE '' END),''), '%Y-%m-%d %H:%i:%s'),
            </if>
            <if test='ioType != null and ioType != ""'>         IO_TYPE = #{ioType}, </if>
            <if test='amount != null and amount != ""'>         AMOUNT = #{amount}, </if>
            <if test='currencyCd != null and currencyCd != ""'> CURRENCY_CD = #{currencyCd}, </if>
            <if test='accountNm != null and accountNm != ""'>   ACCOUNT_NM = #{accountNm}, </if>
            <if test='categoryNm != null and categoryNm != ""'> CATEGORY_NM = #{categoryNm}, </if>
            <if test='subcategoryNm != null and subcategoryNm != ""'> SUBCATEGORY_NM = #{subcategoryNm}, </if>
            <if test='merchantNm != null and merchantNm != ""'> MERCHANT_NM = #{merchantNm}, </if>
            <if test='tags != null and tags != ""'>             TAGS = #{tags}, </if>
            <if test='memo != null and memo != ""'>             MEMO = #{memo}, </if>
            <if test='xferGrpId != null and xferGrpId != ""'>   XFER_GRP_ID = #{xferGrpId}, </if>
            <if test='fixedAt != null and fixedAt != ""'>       FIXED_AT = #{fixedAt}, </if>
            <if test='useAt != null and useAt != ""'>           USE_AT = #{useAt}, </if>
            UPDATED_DT = NOW()
        </set>
        WHERE TXN_ID = #{txnId}
        <include refid="ownerScope"/>
    </update>

    <!-- ÏÇ≠Ï†ú -->
    <delete id="deleteLedger" parameterType="hashmap">
        DELETE FROM TB_LEDGER
        WHERE TXN_ID = #{txnId}
        <include refid="ownerScope"/>
    </delete>

</mapper> 